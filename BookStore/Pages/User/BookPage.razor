@page "/BookPage/{id:int}"
@using BookStore.Data;
@using BookStore.Data.Repositories.Admin;
@using BookStore.Entities;
@using Microsoft.EntityFrameworkCore;

@inject IDbContextFactory<DataContext> ContextFactory;
<div class="d-flex">

    @if (_book != null)
    {
        <img src="@_book.BookCoverUrl" />
        <div class="d-flex flex-column">
            <div>@_book.Title </div>
            <div>by @_author.Name</div>
            <div>@_book.Description </div>
        </div>
    }
    else
    {
        <div>Loading</div>
    }


</div>


@code {
    [Parameter]
    public int id { get; set; }

    Book _book = new();
    Author _author = new();

    protected override async Task OnInitializedAsync()
    {
        using (var repo = new BookRepository(ContextFactory.CreateDbContext()))
        {
            _book = await repo.GetBookByIdAsync(id);
            _author = _book.Author;
        }
    }
}