@page "/AuthorPage/{id:int}"
@using BookStore.Data;
@using BookStore.Data.Repositories.Admin;
@using BookStore.Entities;
@using Microsoft.EntityFrameworkCore;

@inject IDbContextFactory<DataContext> ContextFactory;

    <div>@_author.Name </div>
    <div>@_author.Biography </div>
    @if(_author.Books != null)
    {
        <div class="d-flex flex-column">
        @foreach (var book in _author.Books.OrderBy(x => x.PublicationYear).ToList())
        {
            <a href="">@book.Title</a>
        }
        </div>

    }
@code {
    [Parameter]
    public int id { get; set; }

    Author _author = new();

    protected override async Task OnInitializedAsync()
    {
        using (var repo = new AuthorRepository(ContextFactory.CreateDbContext()))
        {
            _author = await repo.GetAuthorByIdAsync(id);
        }
    }
}
